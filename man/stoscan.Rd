% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stoscan.R
\name{stoscan}
\alias{stoscan}
\title{stoscan}
\usage{
stoscan(DT, ID, lat = "lat", lon = "lon", datetime_, projection)
}
\arguments{
\item{DT}{A data.table including columns for ID, lat, lon and datetime_}

\item{ID}{Unique ID for each cluster of each individual}

\item{lat}{Latitude}

\item{lon}{Longitude}

\item{datetime_}{Date and time}

\item{projection}{Projection of the data (should be equal area projection)}
}
\value{
Data.table with column s_clustID (unique spatially overlapping clusters) and st_clustID (unique spatio-temporal overlapping clusters)
}
\description{
Spatio-temporal clustering from tdbscan outpout
}
\examples{
require(tdbscan)
require(data.table)
require(magrittr)
require(ggplot2)

# z bird
data(zbird)
z = tdbscan(zbird, eps = 12, minPts   = 5, maxLag = 5, borderPoints = TRUE )
z = z[, clustID := factor(clustID)]

o = data.frame(zbird) \%>\% data.table
o = merge(z, o, by.x = 'id', by.y = 'sp.ID')

setnames(o, c('x', 'y'), c('lon', 'lat') )
o = rbindlist(list(copy(o[, tagID := 'bird1']), copy(o[, tagID := 'bird2'])), use.names = TRUE)
o[tagID == 'bird2', lon := lon + 5]
o[!is.na(clustID), ID := paste0(tagID, '_', clustID)]

z = stoscan(o, ID = 'ID', lat = 'lat', lon = 'lon', datetime_ = 'time', projection= '+proj=utm +zone=4 +datum=WGS84')
o = merge(o, z, by = 'ID', all.x = TRUE)

# plot by tag ID
ggplot(o, aes(lon, lat, color = as.character(tagID) ) ) +
  geom_path(aes(color = NULL), col = 'grey', size = .5) +
  geom_point( alpha = .5, size = 2)

# plot by cluster ID of each individual
ggplot(o, aes(lon, lat, color = as.character(ID) ) ) +
  geom_path(aes(color = NULL), col = 'grey', size = .5) +
  geom_point( alpha = .5, size = 2)

# plot of spatial overlapping clusters
ggplot(o, aes(lon, lat, color = as.character(sp_clustID) ) ) +
  geom_path(aes(color = NULL), col = 'grey', size = .5) +
  geom_point( alpha = .5, size = 2)

# plot of spatial and temporal overlapping clusters
ggplot(o, aes(lon, lat, color = as.character(s_clustID) ) ) +
  geom_path(aes(color = NULL), col = 'grey', size = .5) +
  geom_point( alpha = .5, size = 2)
}
